;SAVE#D:SNOWA.PT1
;-------------------
; part 1 of the game
;
; by: Barry Kolbe
;
;-------------------
	.OPT	NOLIST
;
;page zero variables
;
DRY	=	$82
PXP	=	$83	;2byter
PYP	=	$85	; "
ADD	=	$87
HMV	=	$88
CURCHR	=	$89
VERT	=	$8A
EADD	=	$8B
EHOLD	=	$8C
EYX	=	$8D
EYY	=	$8E
ICY	=	$8F
ICX	=	$90
VTIME	=	$91
VFLG	=	$92
XSP	=	$93
YSP	=	$94
RAND	=	$95
ICNT	=	$96
DATA	=	$97
UNIQUE	=	$98
FTIME	=	$99	;7 bytes
CARTIM	=	$A0	;6 bytes
RMTIM	=	$A6	;6 bytes
ROADC	=	$AC	;2 bytes
ROADG	=	$AE	;  "
CNT	=	$B0
SHD	=	$B1
MAPFLG	=	$B2
FUEL	=	$B3	;3 bytes
LIVES	=	$B6
DIRF	=	$B7
DIRECT	=	$B8
CARCNT	=	$B9
ICEON	=	$BA
Y1	=	$BB
Y2	=	$BC
ICEDIR	=	$BD
IDECNT	=	$BE
LEVEL	=	$BF
FULK	=	$C0
ICTL	=	$C1
ICTH	=	$C2
ICESPEED	=	$C3
THOUS	=	$C4
SPSND	=	$C5
IFLAG	=	$C6
IISY	=	$C7
IIY3	=	$C8
COUNT	=	$C9	;these are
IL	=	$CB
TL	=	$CB	;all
JL	=	$CD
BFL	=	$CD
INDR	=	$CB	;2 bytes
IND2	=	$CD
FOFS	=	$CF
YH	=	$D0
XD1	=	$D1
XH	=	$D2
ICECNT	=	$D3
SCRS	=	$D4	;6 bytes
FULX	=	$DA	;6 bytes
FULY	=	$E0	;6 bytes
CARX	=	$E6	;4 bytes
CARY	=	$EA	;4 bytes
OFFSCN	=	$EE	;2 bytes
SLENGTH	=	$F0
EDM	=	$F1	;2
SXP	=	$F3
SYP	=	$F4
;
;OS equates
;
CIOV	=	$E456
ICCOM	=	$0342
ICBAL	=	$0344
ICBAH	=	$0345
ICBLL	=	$0348
ICBLH	=	$0349
AUX1	=	$034A
AUX2	=	$034B
SETVBV	=	$E45C
XITVBV	=	$E462
RANDOM	=	$D20A
RTCLOK	=	$14
CONSOL	=	$D01F
EOL	=	$9B
SEOL	=	$BB
PCHR	=	54
;
COLOR0	=	$02C4
COLOR1	=	$02C5
COLOR2	=	$02C6
COLOR3	=	$02C7
COLOR4	=	$02C8
SDLSTL	=	$0230
CH	=	$02FC
;
STICK	=	$0278
STRIG	=	$0284
HPOSP0	=	$D000
HPOSM0	=	$D004
HSCROL	=	$D404
VSCROL	=	$D405
HITCLR	=	$D01E
P0PL	=	$D00C
P1PL	=	$D00D
;
;memory usage
;
SCNMEM	=	$9000
PMB	=	$8000
SET	=	$8C00
MYPMB	=	$8400
MSMEM	=	PMB+$0300
P0MEM	=	MYPMB
P1MEM	=	MYPMB+$0100
P2MEM	=	MYPMB+$0200
P3MEM	=	MYPMB+$0300
CHSET	=	$8C00
GOVER	=	$9B00
TXTWIN	=	$8B00
SCLN	=	TXTWIN+20
CHRLN1	=	TXTWIN+40
SC2	=	SCNMEM+128
SC3	=	SC2+128
SC4	=	SC3+128
SC5	=	SC4+128
SC6	=	SC5+128
SC7	=	SC6+128
SC8	=	SC7+128
SC9	=	SC8+128
SC10	=	SC9+128
SC11	=	SC10+128
BCKUP	=	$7FC0
SET2	=	$7D00
SCRLMEM	=	$7C00
;credits @ $7b00
;
;display list interrupt
;
	*=	PMB
DLI	PHA
DIC	LDA	#2
	STA	$D40A
	STA	$D01A
	PLA
	RTI
;
;character set
;
	*=	$8C00
	.INCLUDE	#D:SNOW.PT5
;
	*=	TXTWIN
	.SBYTE	" FUEL 150 PLOWS "
	.SBYTE	"3      SCORE "
	.SBYTE	"000000     "
;
	*=	GOVER
	.SBYTE	"  SNOWFLAKES "
	.SBYTE	"WIN       press "
	.SBYTE	"START      "
;
;display lists ;intro first
;then game board
;
	*=	$7F00
IDLST	.BYTE	$70,$70,$70,$70
	.BYTE	$70,$70,$70,$42
	.WORD	SNOWMEM
	.BYTE	$02,$70,$70,$70,$02
	.BYTE	$02,$70,$70,$70,$70
	.BYTE	$57
LMS	.WORD	SCRLMEM
	.BYTE	$70,$70,$70,$70,$46
	.WORD	TOPSCORE
	.BYTE	$41
	.WORD	IDLST
;
	*=	$7F80
DL1	.BYTE	$70,$70,$70
	.BYTE	$42
	.WORD	SNOWMEM
	.BYTE	2
	.BYTE	$75
SL1	.WORD	SCNMEM
	.BYTE	$75
	.WORD	SC2
	.BYTE	$75
	.WORD	SC3
	.BYTE	$75
	.WORD	SC4
	.BYTE	$75
	.WORD	SC5
	.BYTE	$75
	.WORD	SC6
	.BYTE	$75
	.WORD	SC7
	.BYTE	$75
	.WORD	SC8
	.BYTE	$75
	.WORD	SC9
	.BYTE	$75
	.WORD	SC10
	.BYTE	$D5
	.WORD	SC11
	.BYTE	$46
TMESS	.WORD	TXTWIN
	.BYTE	6,$41
	.WORD	DL1
;
;start of program
;
	*=	$4000
;
;save the display list
;for next levels
;
BEGIN	LDY	#50
MDL	LDA	DL1,Y
	STA	BCKUP,Y
	DEY
	BPL	MDL
	LDA	#>CHSET	;new chrset
	STA	756
	JSR	SETPMG	;player init
;
	LDX	#>VBLNK	;set vbi
	LDY	#<VBLNK
	LDA	#7
	JSR	SETVBV
	LDA	#0
	STA	IFLAG	;intro flag
;
;begin new level
;
NEWBEG	LDA	#0
	STA	DIRF
	STA	MAPFLG
	JSR	GETDIR
	JMP	NEWB
NDIRC	JSR	CLOSE6
;
NEWB	JSR	INIT
	JSR	REPLAY
	LDA	#3
	STA	LIVES
	LDA	#0
	STA	ICEON
	JSR	SHOLIV
NLEVL	JSR	STARTI
	JSR	FIGLEV
	JSR	RESFUL
	JSR	DSPFUL
	JSR	REPLAY
	JSR	CLRPM
	LDA	DIRF
	BNE	DROK
MAP2	LDA	MAPFLG	;intern map
	BNE	DROK
	LDA	#1
	STA	MAPFLG
	JSR	UNCOM
	JMP	SKP
DROK	JSR	GETFIL
	JSR	LOADMP
SKP	JSR	FNDFUL
	JSR	FNDCRS
	JSR	CNTRDS
	JSR	COPYDL
	JSR	SETSCN
	LDA	#$0B
	STA	DIRECT
	JSR	DEFPLR
	LDA	#1
	STA	VFLG
;
;main loop
;
MAIN	LDA	CONSOL
	CMP	#6
	BNE	MN2
	JMP	STKEY
MN2	LDA	STICK
	STA	DIRECT
	JSR	DEFPLR
	STA	HITCLR
	JSR	MOVPLR
	JSR	REMOVE
	LDA	644
	BNE	NTRG
	JSR	JMPEDG
NTRG	JSR	ICESND
	LDA	P0PL
	CMP	#12
	BCS	OUCH
	LDA	P1PL
	CMP	#12
	BCS	OUCH
	LDA	ROADG+1
	CMP	ROADC+1
	BNE	KL
	LDA	ROADG
	CMP	ROADC
	BNE	KL
	JSR	WAITSM
	JMP	NLEVL
KL	LDA	FUEL
	ORA	FUEL+1
	ORA	FUEL+2
	BNE	KK
OUCH	STA	HITCLR
	JSR	REMP23
	JSR	SPIN
	JSR	GRESET
	STA	HITCLR
	JSR	DELAY
	JMP	KK
OOPS	JMP	GAMOVR
KK	LDA	LIVES
	BEQ	OOPS
	LDA	CH
	CMP	#$FF
	BEQ	NOPAUS
	JSR	PAUSE
NOPAUS	JMP	MAIN
;
;set pmg
;
SETPMG	LDA	#62
	STA	559
	LDA	#17	;5th enable
	STA	623
	LDA	#3
	STA	53277
	LDA	#>PMB
	STA	54279
	LDA	#$28	;yellow
	STA	704
	LDA	#6	;black
	STA	705
	LDA	#$A6
	STA	706
	STA	707
	LDA	#$80
	STA	PXP
	LDA	#$70
	STA	PYP
	LDA	#1
	STA	53258
	STA	53259
	RTS
;
;clear pm area
;
CLRPM	LDY	#$FF
	LDA	#0
CPM	STA	P0MEM,Y
	STA	P1MEM,Y
	STA	P2MEM,Y
	STA	P3MEM,Y
	STA	MSMEM,Y
	DEY
	CPY	#$FF
	BNE	CPM
	RTS
;
;define plrs
;
DEFPLR	LDX	#3
	LDA	DIRECT
DF1	CMP	DIRTAB,X
	BEQ	DFOK
	DEX
	BPL	DF1
	RTS
DFOK	LDA	PD0L,X
	STA	JL
	LDA	PD0H,X
	STA	JL+1
	LDA	PD1L,X
	STA	IL
	LDA	PD1H,X
	STA	IL+1
	TXA
	PHA
	LDA	PYP
	STA	Y1
	CLC
	ADC	YTB,X
	STA	PYP+1
	STA	Y2
	TAY
	LDA	#0
	STA	P1MEM-1,Y
	LDY	#0
DFP	LDA	(JL),Y
	LDX	Y1
	STA	P0MEM,X
	LDA	(IL),Y
	LDX	Y2
	STA	P1MEM,X
	INY
	INC	Y1
	INC	Y2
	CPY	#16
	BNE	DFP
	LDX	Y2
	STA	P1MEM,X
	LDX	PXP
	STX	HPOSP0
	PLA
	TAX
	LDA	PXP
	CLC
	ADC	XTB,X
	STA	PXP+1
	STA	HPOSP0+1
	RTS
;
DIRTAB	.BYTE	11,7,14,13
XTB	.BYTE	$FF,$01,$00,$00
YTB	.BYTE	$00,$00,$FF,$01
;
;player definitions & tables
;
PD0L	.BYTE	<P0D1,<P0D2,<P0D3,<P0D4
PD0H	.BYTE	>P0D1,>P0D2,>P0D3,>P0D4
PD1L	.BYTE	<P1D1,<P1D2,<P1D3,<P1D4
PD1H	.BYTE	>P1D1,>P1D2,>P1D3,>P1D4
P0D1	.BYTE	$00,$00,$00,$FF
	.BYTE	$FF,$76,$76,$76
	.BYTE	$76,$76,$76,$FF
	.BYTE	$FF,$00,$00,$00
P0D2	.BYTE	$00,$00,$00,$FF
	.BYTE	$FF,$6E,$6E,$6E
	.BYTE	$6E,$6E,$6E,$FF
	.BYTE	$FF,$00,$00,$00
P0D3	.BYTE	$00,$66,$66,$7E
	.BYTE	$7E,$7E,$7E,$7E
	.BYTE	$7E,$66,$66,$66
	.BYTE	$7E,$7E,$66,$00
P0D4	.BYTE	$00,$66,$7E,$7E
	.BYTE	$66,$66,$66,$7E
	.BYTE	$7E,$7E,$7E,$7E
	.BYTE	$7E,$66,$66,0
;
P1D1	.BYTE	$00,$AA,$AA,$80
	.BYTE	$80,$84,$84,$84
	.BYTE	$84,$84,$84,$80
	.BYTE	$80,$AA,$AA,$00
P1D2	.BYTE	$00,$FD,$FD,$01
	.BYTE	$01,$61,$61,$61
	.BYTE	$61,$61,$61,$01
	.BYTE	$01,$FD,$FD,$00
P1D3	.BYTE	0,$FF,$FF,$00
	.BYTE	$99,$99,$18,$18
	.BYTE	$99,$99,$18,$18
	.BYTE	$99,$99,$00,$00
P1D4	.BYTE	$00,$00,$81,$99
	.BYTE	$18,$18,$99,$99
	.BYTE	$18,$18,$99,$99
	.BYTE	$00,$FF,$FF,$00
;
;delay
;
LDL	LDY	#19
	BNE	DLN
DELAY	LDY	#7
DLN	JSR	WAIT
	DEY
	BNE	DLN
	RTS
;
;initialize
;
;set up 128 table
INIT	LDY	#0
	LDA	#<SCNMEM
	STA	M128L
	LDA	#>SCNMEM
	STA	M128H
TLP	LDA	M128L,Y
	CLC
	ADC	#128
	STA	M128L+1,Y
	LDA	M128H,Y
	ADC	#0
	STA	M128H+1,Y
	INY
	CPY	#33
	BNE	TLP
;
	LDX	#7	;score & fuel
	LDA	#$10	;IC $10
SCF	STA	SCRS,X
	DEX
	BPL	SCF
	STA	THOUS
	JSR	RESFUL
	LDA	#3	;set lives
	STA	LIVES
	LDA	#$13
	STA	TXTWIN+16
	LDA	#$60
	STA	ICECNT
	LDA	#$FF
	STA	LEVEL
	RTS
;
CLRTAB	.BYTE	$D8,$44,$0A,$46,$00
;
STSCRL	LDA	#>SL1
	STA	JL+1
	LDA	#<SL1
	STA	JL
	RTS
;
;get scn pos
;
WHER	LDY	DRY
WHERE	LDA	M128L,Y
	STA	JL
	LDA	M128H,Y
	STA	JL+1
	RTS
;
;shadow scrols
;
SMX	.BYTE	22	;pos on scrn
SMY	.BYTE	4
;
;move
;
SCROLL	LDA	DIRECT
;
MMR	CMP	#7	;rt?
	BNE	MML
	JSR	LOOKR
	BCC	RA1
	RTS
RA1	LDA	SXP
	CMP	#83
	BCC	HO
	RTS
HO	LDA	#1
	STA	VERT
	JSR	PLWSND
KB	LDA	#1
	STA	ADD
	JSR	CORSH
	INC	SMX
	INC	SXP
	LDX	#3
KA	STX	HSCROL
	JSR	WAIT
	JSR	TRACKR
	DEX
	BPL	KA
	DEC	VERT
	LDA	VERT
	BPL	KB
FULOUT	JSR	SFUEL
	JSR	OFF2
	JSR	CKFTIM
	RTS
;
MML	CMP	#11
	BNE	MUP
	JSR	LOOKL
	BCC	LA1
	RTS
LA1	LDA	SXP
	BNE	HQ
	RTS
HQ	LDA	#1
	STA	VERT
	JSR	PLWSND
KD	LDX	#0
KC	STX	HSCROL
	JSR	WAIT
	JSR	TRACKL
	INX
	CPX	#4
	BNE	KC
	LDA	#$FF
	STA	ADD
	LDX	#0
	STX	HSCROL
	JSR	CORSH
	DEC	SXP
	DEC	SMX
	DEC	VERT
	LDA	VERT
	BPL	KD
	JMP	FULOUT
;
;coarse h scrol
;
CORSH	LDY	#0
CSA	LDA	SL1,Y
	CLC
	ADC	ADD
	STA	SL1,Y
	INY
	INY
	INY
	CPY	#33
	BNE	CSA
	RTS
;
;up
;
MUP	CMP	#14
	BNE	MDN
	JSR	LOOKU
	BCC	UA1
	RTS
UA1	LDA	SYP
	BEQ	NOM
	JSR	PLWSND
	LDA	#$FF
	STA	ADD
	JSR	CORSV
	DEC	SYP
	DEC	SMY
	LDX	#15
U1	STX	VSCROL
	JSR	WAIT
	JSR	TRACKU
	DEX
	BPL	U1
	LDA	#0
	STA	VSCROL
	JMP	FULOUT
	RTS
;
;down
;
MDN	CMP	#13
	BNE	NOM
	JSR	LOOKD
	BCC	DA1
	RTS
DA1	LDA	SYP
	CMP	#9
	BCC	D1
	RTS
D1	JSR	PLWSND
	LDX	#0
D2	STX	VSCROL
	JSR	WAIT
	JSR	TRACKU
	INX
	CPX	#16
	BNE	D2
	LDX	#0
	STX	VSCROL
	LDA	#1
	STA	ADD
	JSR	CORSV
	INC	SYP
	INC	SMY
	JMP	FULOUT
NOM	RTS
;
;coarse vrt scrl
;
CORSV	LDA	ADD
	BMI	CSV
	LDY	#0
CVL	LDA	SL1,Y
	CLC
	ADC	#$80
	STA	SL1,Y
	INY
	LDA	SL1,Y
	ADC	#0
	STA	SL1,Y
	INY
	INY
	CPY	#33
	BNE	CVL
	RTS
;
CSV	LDY	#0
CVP	LDA	SL1,Y
	SEC
	SBC	#$80
	STA	SL1,Y
	INY
	LDA	SL1,Y
	SBC	#0
	STA	SL1,Y
	INY
	INY
	CPY	#33
	BNE	CVP
	RTS
;
;wait a jiffy
;
WAIT	LDA	#0
	STA	$14
WW2	LDA	$14
	BEQ	WW2
	RTS
;
;fine scrl plr
;
MOVPLR	LDA	DIRECT
	CMP	#7
	BNE	MLL
	LDA	PXP
	CMP	#$7C
	BCC	GOR
	LDA	SXP
	CMP	#83
	BCS	GOR
	JMP	MOUT
GOR	LDA	PXP
	CMP	#$C8
	BCS	MVRET
	JSR	LOOKR
	BCC	GOR1
	RTS		;nope
GOR1	JSR	PLWSND
	LDY	#7
RL1	INC	PXP
	LDX	PXP
	STX	HPOSP0
	INC	PXP+1
	LDX	PXP+1
	STX	HPOSP0+1
	JSR	WAIT
	JSR	TRACKR
	DEY
	BPL	RL1
	INC	SMX
	INC	SMX
	JMP	FULOUT
MOUT	JSR	SCROLL
MVRET	RTS
;
MLL	CMP	#11
	BNE	MDD
	JSR	LOOKL
	BCC	GOL2
	RTS
GOL2	LDA	PXP
	CMP	#132	;124+8
	BCS	GOL1
	LDA	SXP
	BNE	MOUT
GOL	LDA	PXP
	CMP	#$30
	BEQ	MVRET
	BCC	MVRET
GOL1	JSR	PLWSND
	LDY	#7
LL1	DEC	PXP
	LDX	PXP
	STX	HPOSP0
	DEC	PXP+1
	LDX	PXP+1
	STX	HPOSP0+1
	JSR	WAIT
	JSR	TRACKL
	DEY
	BPL	LL1
	DEC	SMX
	DEC	SMX
	JMP	FULOUT
;
MDD	CMP	#13
	BNE	MUU
	JSR	LOOKD
	BCC	GD3
	RTS
GD3	LDA	PYP
	CMP	#$60
	BCC	GDN
	LDA	SYP
	CMP	#9
	BCS	GDN
	JMP	MOUT
GDN	LDA	PYP
	CMP	#$C0
	BCS	MVRET
	LDA	#15
	STA	VERT
	JSR	PLWSND
GD2	LDA	PYP
	STA	Y1
	LDA	PYP+1
	STA	Y2
	TAY
	LDA	#0
	STA	P1MEM,Y	;eras top
	LDX	#15
GD1	LDY	Y1
	LDA	P0MEM+15,Y
	STA	P0MEM+16,Y
	LDY	Y2
	LDA	P1MEM+15,Y
	CMP	#$18
	BNE	FOA
	LDA	#$99
	BNE	FOB
FOA	CMP	#$99
	BNE	FOB
	LDA	#$18
FOB	STA	P1MEM+16,Y
	DEC	Y1
	DEC	Y2
	DEX
	BPL	GD1
	INC	PYP
	INC	PYP+1
	JSR	WAIT
	DEC	VERT
	LDA	VERT
	BPL	GD2
	INC	SMY
	JMP	FULOUT
;
;
MUU	CMP	#14
	BEQ	MU3
GU4	JMP	MVRET
MU3	JSR	LOOKU
	BCC	MU4
	RTS
MU4	LDA	PYP
	CMP	#$70
	BCS	GUU
	LDA	SYP
	BEQ	GUU
	JMP	MOUT
GUU	LDA	PYP
	CMP	#$30
	BNE	GU5
	JMP	MOUT
GU5	JSR	PLWSND
	LDA	#15
	STA	VERT
GU2	LDY	PYP
	LDX	#15
GU1	LDA	P0MEM,Y
	STA	P0MEM-1,Y
	LDA	P1MEM,Y
	CMP	#$18
	BNE	FOC
	LDA	#$99
	BNE	FOD
FOC	CMP	#$99
	BNE	FOD
	LDA	#$18
FOD	STA	P1MEM-1,Y
	INY
	DEX
	BPL	GU1
	JSR	WAIT
	DEC	PYP
	DEC	VERT
	LDA	VERT
	BPL	GU2
	DEC	SMY
	JMP	FULOUT
;
;locate :result in curchr
;
LOOKR	LDY	SMY
	JSR	WHERE
	LDY	SMX
	INY
	INY
LKRET	LDA	(JL),Y
	STA	CURCHR
	JSR	CKCHAR
	RTS
;
LOOKL	LDY	SMY
	JSR	WHERE
	LDY	SMX
	DEY
	DEY
	JMP	LKRET
;
LOOKD	LDY	SMY
	INY
	JSR	WHERE
	LDY	SMX
	JMP	LKRET
;
LOOKU	LDY	SMY
	DEY
	JSR	WHERE
	LDY	SMX
	JMP	LKRET
;
;erase chr beneath dozer
;repalce with next char.
;which is a road w/o snow
;
REMOVE	LDY	SMY
	JSR	WHERE
	LDY	SMX
	LDA	(JL),Y
	LDX	#15
RB1	CMP	ROADS,X
	BEQ	SF5
	DEX
	BPL	RB1
	JMP	SF6
SF5	CMP	#$1B	;cng car to road
	BEQ	SF8
	CMP	#$1D
	BNE	SF7
SF8	PHA		;save car
	LDA	#$61
	STA	(JL),Y
	INY
	STA	(JL),Y
	JSR	BONSCR
	JSR	HORN
	PLA
	CMP	#$1B
	BEQ	SFA
	BNE	SF6
SF7	TAX
	INX
	TXA
	STA	(JL),Y
	INY
	LDA	(JL),Y
	TAX
	INX
	TXA
	STA	(JL),Y
	CMP	#$0B	;    fuel?
	BEQ	SF6
SFA	INC	ROADG
	BNE	SH1
	INC	ROADG+1
;
SH1	JSR	DOSCOR	;show score
;
SF6	LDA	CURCHR
	CMP	#$08	;fuel?
	BNE	CAR?
;
	INC	CURCHR	;empty fuel
	LDY	SMY
	JSR	WHERE
	LDX	FOFS	;get pos.
FFA	LDA	JL+1
	CMP	FULY,X
	BEQ	FFB
FFC	DEX
	BPL	FFA
	RTS		;shouldnt happen
FFB	LDA	SMX	;put it on
	CLC		;screen
	ADC	JL
	CMP	FULX,X
	BNE	FFC
	LDA	#100	;got it
	STA	FTIME,X	;set timer
	JSR	FILSND	;sound
	JSR	RESFUL	;show it
	JSR	DSPFUL
SF2	RTS
;
;hit a car
;
CAR?	LDY	SMY	;find out
	JSR	WHERE	;which one
	LDX	CARCNT
	BEQ	SF2
CB1	LDA	JL+1
	CMP	CARY,X
	BEQ	CB2
CB3	DEX
	BPL	CB1
	RTS		;nope
CB2	LDA	JL
	CLC
	ADC	SMX
	CMP	CARX,X
	BNE	CB3
	LDA	#50	;set timer
	STA	CARTIM,X
	RTS
;
;road,fuel,car chrs
; 8 = fuel $1b= car
;
ROADS	.BYTE	$60,$62,$64,$66
	.BYTE	$68,$6A,$6C,$6E
	.BYTE	$70,$72,$74,$76
	.BYTE	$78,$08,$1B,$1D
	.BYTE	$61,$63,$65,$67,$69
	.BYTE	$6B,$6D,$6F,$71
	.BYTE	$73,$75,$77,$79
;
;check if about to move
;onto a valid char.
;
CKCHAR	LDX	#28
CK1	CMP	ROADS,X
	BEQ	CROK
	DEX
	BPL	CK1
	SEC		;no move
	RTS
CROK	CLC		;move ok
	RTS
;
;decrease fuel
;
SFUEL	DEC	FUEL+2
	LDA	FUEL+2
	ORA	FUEL+1
	ORA	FUEL
	BEQ	SF3
	LDA	FUEL+2
	BPL	SF3
	LDA	#9
	STA	FUEL+2
	DEC	FUEL+1
	LDA	FUEL+1
	BPL	SF3
	LDA	#9
	STA	FUEL+1
	DEC	FUEL
SF3	JSR	DSPFUL
FRET	RTS
;
;show fuel left
;
DSPFUL	LDX	#2
DS	LDA	FUEL,X
	ORA	#$10
	STA	TXTWIN+6,X
	DEX
	BPL	DS
	RTS
;
;wait some
;
WAITSM	LDA	#0
	LDX	#15	;15 secs
	STA	VFLG
WSM	JSR	LDL
	DEX
	BPL	WSM
	RTS
;
;pt2 is rest of game
;pt3 is the screen maker
;pt4 is the introduction
;
	.INCLUDE	#D:SNOW.PT2
	.INCLUDE	#D:SNOW.PT4
	.INCLUDE	#D:SNOW.PT3
;
;variables
;
RANDS	.DS	16
DBUF	.DS	20
EDGFLG	.BYTE	1
M128L	.DS	36
M128H	.DS	36
	*=	$02E0
	.WORD	BEGIN
	.END
Listing 3: Assembly
;SAVE#D:SNOW.PT2
;----------------
; part 2 of game
;
; by:Barry Kolbe
;
;----------------
;
;load a map from disk
;
LOADMP	LDX	#$10
	LDA	#$0C
	STA	ICCOM,X
	JSR	CIOV
	LDX	#$10
	LDA	#3
	STA	ICCOM,X
	LDA	#>MAPNAM
	STA	ICBAH,X
	LDA	#<MAPNAM
	STA	ICBAL,X
	LDA	#4
	STA	AUX1,X
	LDA	#0
	STA	AUX2,X
	JSR	CIOV
	BPL	RDOK
	RTS
RDOK	LDX	#$10
	LDA	#>SCNMEM
	STA	ICBAH,X
	LDA	#<SCNMEM
	STA	ICBAL,X
	LDA	#0
	LDA	#10	;10 pages
	STA	ICBLH,X
	LDA	#7	;read it
	STA	ICCOM,X
	JSR	CIOV
	RTS
;
MAPNAM	.BYTE	"D1:SMAP.   ",EOL
;
;count all the roads
;each pair of road bytes
;counts as 1 point
;
CNTRDS	LDY	#0
	STY	ROADC
	INC	ROADC
	STY	ROADC+1
	STY	CNT	;lines
	JSR	WHERE
CR4	LDY	#0
CR1	LDA	(JL),Y
	LDX	#12
CR3	CMP	ROADS,X	;is it road?
	BEQ	CR2
	DEX
	BPL	CR3
CR6	INY		;skip over 2
	INY
	CPY	#0
	BNE	CR1
	INC	JL+1
	INC	CNT
	LDY	CNT
	CPY	#10
	BNE	CR4
	RTS
CR2	INC	ROADC
	BNE	CR5
	INC	ROADC+1
CR5	JMP	CR6
;
;copy the game dlist
;back for next board
;
COPYDL	LDY	#50
CC1	LDA	BCKUP,Y
	STA	DL1,Y
	DEY
	BPL	CC1
	RTS
;
;reset fuel in text window
;
RESFUL	LDA	#0
	STA	FUEL+2
	LDA	#1
	STA	FUEL
	LDA	FULK
	STA	FUEL+1
	RTS
;
;find fuel containers
;in map-store their
;positions
;
FNDFUL	LDY	#0
	STY	CNT
	STY	FOFS
SS4	LDY	CNT
	CPY	#19	;20 lines
	BNE	SS3
	RTS
SS3	JSR	WHERE
	LDY	#0
SS2	LDA	(JL),Y
	CMP	#8	;fuel chr
	BEQ	SS1
SS5	INY
	INY
	CPY	#126	;end of line?
	BNE	SS2
	INC	CNT
	JMP	SS4
;
SS1	LDX	FOFS	;store x,y
	LDA	JL+1	;positions
	STA	FULY,X
	TYA
	CLC
	ADC	JL
	STA	FULX,X
	INC	FOFS
	LDA	FOFS
	CMP	#6	;only 6 allowed
	BNE	SS5
	RTS
;
;check timers-fuel first
;
CKFTIM	LDX	FOFS
	BEQ	CCB	;no fuel
FTC	LDA	FTIME,X
	BEQ	FTB
	DEC	FTIME,X
	LDA	FTIME,X
	BNE	FTB
	LDA	FULY,X
	STA	JL+1
	LDA	FULX,X
	STA	JL
	LDY	#0
	LDA	#8
	STA	(JL),Y
	INY
	LDA	#$0A
	STA	(JL),Y
FTB	DEX
	BPL	FTC
;
;check bonus car timers
;
CCB	LDX	CARCNT
	BNE	CTC	;yes
	RTS		;no cars
CTC	LDA	CARTIM,X
	BEQ	CTD
	DEC	CARTIM,X
	LDA	CARTIM,X
	BNE	CTD
	LDA	CARY,X
	STA	JL+1
	LDA	CARX,X
	STA	JL
	LDY	#0	;put bonus
	LDA	(JL),Y	;car on scn
	CMP	#$60	;snow bckgrnd?
	BNE	CTF
	LDA	#$1B	;yes
	STA	(JL),Y
	INY
	LDA	#$1C
CTG	STA	(JL),Y
	LDA	#$50
	STA	RMTIM,X
	JSR	BELL
CTD	DEX
	BPL	CTC
;
;timers to remove cars
;
	LDX	CARCNT
CTK	LDA	RMTIM,X
	BEQ	RRA
	DEC	RMTIM,X
	LDA	RMTIM,X
	BNE	RRA
	LDA	CARY,X
	STA	JL+1
	LDA	CARX,X
	STA	JL
	LDY	#0
	LDA	(JL),Y
	CMP	#$1B
	BNE	CTI
	LDA	#$60	;snow road
CTM	STA	(JL),Y
	INY
	STA	(JL),Y
	LDA	#100	;reset timer
	STA	CARTIM,X
RRA	DEX
	BPL	CTK
	RTS
;
CTI	LDA	#$61	;plain road
	BNE	CTM
	RTS
CTF	LDA	#$1D
	STA	(JL),Y
	INY
	LDA	#$1E
	BNE	CTG
;
;find bonus cars on map
;
FNDCRS	LDY	#0
	STY	CNT
	STY	CARCNT
FCA	LDY	CNT
	CPY	#19	;20 lines
	BNE	FCE
	RTS
FCE	JSR	WHERE
	LDY	#0
FCC	LDA	(JL),Y
	CMP	#$1B	;cars
	BEQ	FCB
FCD	INY
	INY
	CPY	#126	;end of line?
	BNE	FCC
	INC	CNT
	JMP	FCA
FCB	LDX	CARCNT
	LDA	JL+1
	STA	CARY,X
	TYA
	CLC
	ADC	JL
	STA	CARX,X
	TYA
	PHA
	LDA	#$60	;repl w/road
	STA	(JL),Y
	INY
	STA	(JL),Y
	PLA
	TAY
	INC	CARCNT
	LDA	CARCNT
	CMP	#4	;only 4 cars
	BNE	FCD
	RTS
;
;show bonus & regular score
;
BONSCR	LDX	#3	;100 bonus
	BNE	SCD
;
DOSCOR	LDX	#4	;reg. score
SCD	LDA	SCRS,X
	CLC
	ADC	#1
	STA	SCRS,X
SCB	CMP	#$1A
	BCC	SCE
	LDA	#$10
	STA	SCRS,X
	DEX
	BMI	SCE
	INC	SCRS,X
	LDA	SCRS,X
	JMP	SCB
SCE	LDX	#5
SCC	LDA	SCRS,X
	STA	SCLN+9,X
	DEX
	BPL	SCC
	LDA	SCRS+1
	CMP	THOUS
	BEQ	CRET
	STA	THOUS
	INC	LIVES
	JSR	SHOLIV
CRET	RTS
;
;move the storm
;
MOVICE	LDA	ICECNT	;time for
	BEQ	NEWD	;new direction?
	DEC	ICECNT	;no
	LDX	ICEDIR	;get direction
	LDA	ICETB,X
	STA	IJMP+1
	LDA	ICETB+1,X
	STA	IJMP+2
	LDA	#1
	STA	ICEON
IJMP	JSR	$FFFF	;move it
	JMP	XITVBV
;
;get a new direction
;and set flags
;
NEWD	LDA	RANDOM
	AND	#3
	TAX
	ASL	A
	STA	ICEDIR
	LDA	#$6B	;time on
	STA	ICECNT	;screen
	LDA	IYP,X	;starting
	STA	ICY	;position
	LDA	IXP,X
	STA	ICX
	CLC
	ADC	#$0C	;eyes
	STA	EYX
	JSR	PUTICE	;put definition
	JSR	ZB3	;in memory
	LDA	ICTL	;time spent
	STA	OFFSCN	;off screen
	LDA	ICTH
	STA	OFFSCN+1
	LDA	#0	;off yet
	STA	ICEON
	JMP	XITVBV
;
;move table
;
ICETB	.WORD	ZRU
	.WORD	ZLD
	.WORD	ZRD
	.WORD	ZLU
;
;diagonal movement
;
ZRU	JSR	ZIRT
	JSR	ZIUP
	RTS
ZLD	JSR	ZILF
	JSR	ZIDN
	RTS
ZRD	JSR	ZIRT
	JSR	ZIDN
	RTS
ZLU	JSR	ZILF
	JSR	ZIUP
	RTS
;
;slide it up
;
ZIUP	LDY	ICY
	LDX	#31
ZIUA	LDA	P2MEM,Y
	STA	P2MEM-1,Y
	LDA	P3MEM,Y
	STA	P3MEM-1,Y
	INY
	DEX
	BPL	ZIUA
	DEC	ICY
	LDA	#0
	LDY	EYY
	STA	MSMEM+1,Y
	LDA	#$C3
	STA	MSMEM-1,Y
	DEC	EYY
	RTS
;
;go down
;
ZIDN	LDA	ICY
	CLC
	ADC	#31
	TAY
	LDX	#31
ZIDA	LDA	P2MEM,Y
	STA	P2MEM+1,Y
	LDA	P3MEM,Y
	STA	P3MEM+1,Y
	DEY
	DEX
	BPL	ZIDA
	INC	ICY
	LDA	#0
	LDY	EYY
	STA	MSMEM,Y
	LDA	#$C3
	STA	MSMEM+2,Y
	INC	EYY
	RTS
;
IYP	.BYTE	$C0,$30,$30,$C0
IXP	.BYTE	$0A,$E0,$0A,$E0
;
;move storm left
;
ZILF	DEC	ICX
	DEC	ICX
	DEC	EYX
	DEC	EYX
ZB3	LDA	ICX
	STA	HPOSP0+2
	CLC
	ADC	#16
	STA	HPOSP0+3
	LDA	EYX
	STA	HPOSM0
	CLC
	ADC	#6
	STA	HPOSM0+3
	RTS
;
;move stormy right
;
ZIRT	INC	ICX
	INC	ICX
	INC	EYX
	INC	EYX
	LDA	EYX
	JMP	ZB3
;
;put snow storm on screen
;
PUTICE	JSR	CLR23
	LDX	#0
	LDY	ICY
ICA	LDA	ICEDAT,X
	STA	P2MEM,Y
	STA	P2MEM+1,Y
	LDA	ICDT2,X
	STA	P3MEM,Y
	STA	P3MEM+1,Y
	INY
	INY
	INX
	CPX	#16
	BNE	ICA
	LDA	ICY
	CLC
	ADC	#$0C
	STA	EYY
	LDY	EYY
	LDA	#$C3
	STA	MSMEM,Y
	STA	MSMEM+1,Y
	RTS
;
;stormy's definition
;
ICEDAT	.BYTE	$00,$04,$02,$32
	.BYTE	$0B,$07,$3D,$4F
	.BYTE	$0C,$3D,$47,$0B
	.BYTE	$12,$12,$01,$00
ICDT2	.BYTE	$00,$80,$48,$48
	.BYTE	$D0,$E6,$BC,$F0
	.BYTE	$32,$BC,$E0,$D0
	.BYTE	$4C,$40,$20,$00
;
;erase plyrs 2,3 & missiles
;
CLR23	LDX	#0
	TXA
C23	STA	P3MEM,X
	STA	P2MEM,X
	STA	MSMEM,X
	INX
	BNE	C23
	RTS
;
;reset game due to
;lost lives
;
GRESET	DEC	LIVES
	JSR	SHOLIV
	JSR	RESFUL
	JSR	DSPFUL
	RTS
;
;show # of lives
;
SHOLIV	LDA	LIVES
	CMP	#10
	BCC	GRT
	LDA	#9
	STA	LIVES
GRT	ORA	#$10
	STA	TXTWIN+16
	RTS
;
;let the storm exit stage
;
REMP23	LDA	#0
	STA	HPOSP0+2
	STA	HPOSP0+3
	STA	HPOSM0
	STA	HPOSM0+3
	STA	ICECNT
	LDA	ICTL
	STA	OFFSCN
	LDA	ICTH
	STA	OFFSCN+1
	LDA	#0
	STA	ICEON
	RTS
;
;game over-snow guys win
;
GAMOVR	LDA	#>GOVER
	STA	TMESS+1
	LDA	#<GOVER
	STA	TMESS
	LDA	#0	;turn off vbi
	STA	VFLG
	JSR	SNDOFF
GAM	LDA	CONSOL	;chk for START
	CMP	#6
	BNE	GAM
	JMP	NEWBEG
;
;initialize sound
;
SNDOFF	LDA	#0
	STA	$D208
	LDX	#3
	STX	$D20F
	LDX	#7
SNL	STA	$D200,X
	DEX
	BPL	SNL
	RTS
;
;turn off individ. snds
;
OFF1	LDA	#0
	STA	$D200
	STA	$D201
	RTS
;
OFF2	LDA	#0
	STA	$D203
	STA	$D202
	RTS
;
OFF34	LDA	#0
	STA	$D204
	STA	$D205
	STA	$D206
	STA	$D207
	RTS
;
;honk horn when dozer hits car
;
HORN	JSR	SNDOFF
	LDX	#1	;twice!
HN1	LDA	#121
	STA	$D204
	LDA	#$A6
	STA	$D205
	LDA	#10
	STA	$D206
	LDA	#$24
	STA	$D207
	JSR	LDL
	JSR	OFF34
	JSR	LDL
	DEX
	BPL	HN1
	RTS
;
;pause the game
;
PAUSE	LDX	#$FF
	STX	CH
	LDA	#0	;hold on vbi
	STA	VFLG
	JSR	WAIT
PAUS	LDA	CH
	CMP	#$FF
	BEQ	PAUS
	STX	CH
	LDA	#1
	STA	VFLG
	RTS
;
;the vbi
;
VBLNK	LDA	VFLG	;running?
	BNE	VBC	;yes
VBA	JMP	XITVBV
VBC	LDA	OFFSCN	;coming on?
	ORA	OFFSCN+1
	BEQ	VBB	;yes
	DEC	OFFSCN	;countdown
	LDA	OFFSCN
	CMP	#$FF
	BNE	VBA
	DEC	OFFSCN+1
	JMP	VBA
VBB	DEC	VTIME	;vbi speed
	LDA	VTIME
	BNE	VBA
	LDA	ICESPEED
	STA	VTIME
	JMP	MOVICE	;do the move
;
;make a plowing sound
;
PLWSND	LDA	ICEON	;unless
	BNE	NOPL	;the storm is
	LDA	#$32	;making noise
	STA	$D202
	LDA	#$46
	STA	$D203
	JSR	WAIT
NOPL	RTS
;
;reset some playing stuff
;
REPLAY	LDA	#$80	;dozer's
	STA	PXP	;position
	LDA	#$70
	STA	PYP
	LDA	#4	;scroll shadows
	STA	SMY
	LDA	#24
	STA	SMX
	LDA	#0	;screen pos.
	STA	SXP
	STA	SYP
	LDX	#5	;fuel timers
	LDA	#0
FT1	STA	FTIME,X
	DEX
	BPL	FT1
	LDX	#3	;car timers
CT1	LDA	CARSHD,X
	STA	CARTIM,X
	LDA	#0
	STA	RMTIM,X
	DEX
	BPL	CT1
	LDA	#0	;reset road
	STA	ROADG	;counters
	STA	ROADG+1
	INC	ROADG
	STA	ICECNT
	LDA	ICESPEED	;storm'S speed
	STA	VTIME
	JSR	SNDOFF	;sound off
	LDA	ICTL
	STA	OFFSCN
	LDA	ICTH
	STA	OFFSCN+1
	RTS
;
;interval between cars
;
CARSHD	.BYTE	$30,$60,$80,$B0
;
;speed up for next level
;fuel down by 10
;storm is off screen less
;storm moves faster
;
FIGLEV	LDX	LEVEL
	CPX	#5
	BEQ	LEA
	INC	LEVEL
LEA	LDX	LEVEL
	LDA	FULM,X
	STA	FULK
	LDA	ICOFFL,X
	STA	ICTL
	LDA	ICOFFH,X
	STA	ICTH
	LDA	ICESPDT,X
	STA	ICESPEED
	LDA	#1
	STA	EDGFLG
	JSR	SNDOFF
	RTS
;
;tables for stormy
;
FULM	.BYTE	8,7,6,5,4,3
ICOFFL	.BYTE	$80,$80,0,$80,0,$80
ICOFFH	.BYTE	3,2,2,1,1,0
ICESPDT	.BYTE	10,8,6,4,2,1
SPTAB	.BYTE	0,2,1,3
;
;spin dozer if hit by storm
;or out of fuel
;
SPIN	LDA	DIRECT
	PHA
	LDY	#4
	STY	YSP
	LDA	#0
	STA	SPSND
SPB	LDX	#3
	STX	XSP
SPA	LDA	SPTAB,X
	TAX
	JSR	DFOK
	LDA	#$86
	STA	$D203
	LDA	SPSND
	CLC
	ADC	#9
	STA	SPSND
	STA	$D202
	JSR	DELAY
	DEC	XSP
	LDX	XSP
	BNE	SPA
	DEC	YSP
	LDY	YSP
	BNE	SPB
	PLA
	STA	DIRECT
	JSR	DFOK
	JSR	OFF2
	RTS
;
;move the tracks on the dozer
;
TRACKR	STY	YH
	STX	XH
	LDA	XD1
	AND	#1
	TAX
	LDA	TRKR,X
TRKJMP	LDY	PYP+1
	STA	P1MEM+1,Y
	STA	P1MEM+2,Y
	STA	P1MEM+13,Y
	STA	P1MEM+14,Y
	INC	XD1
	LDY	YH
	LDX	XH
	RTS
;
TRKR	.BYTE	$55,$A9	;masks
;
TRACKL	STY	YH
	STX	XH
	LDA	XD1
	AND	#1
	TAX
	LDA	TRKL,X
	JMP	TRKJMP
;
TRKL	.BYTE	$AA,$95	;masks
;
TRACKU	STY	YH
	STX	XH
	LDY	PYP+1
	LDX	#7
TRU1	LDA	P1MEM+4,Y
	CMP	#$99
	BNE	TRU2
	LDA	#$18
	BNE	TRU3
TRU2	CMP	#$18
	BNE	TRU3
	LDA	#$99
TRU3	STA	P1MEM+4,Y
	INY
	DEX
	BPL	TRU1
	LDX	XH
	LDY	YH
	RTS
;
;filling up with fuel sound
;
FILSND	JSR	OFF2
	LDA	#$A4
	STA	$D203
	LDX	#160
FIL1	STX	$D202
	JSR	FDEL
	CPX	#45
	BNE	FIL2
	LDA	#$A2
	STA	$D203
FIL2	DEX
	BNE	FIL1
	JSR	OFF2
	RTS
;
FDEL	LDY	#200
FD1	JSR	WAIT
	DEY
	BPL	FD1
	RTS
;
;get the directory
;search for SMAP.???
;
GETDIR	JSR	CLOSE6
	LDX	#$60
	LDA	#3
	STA	ICCOM,X
	LDA	#>DIRNAM
	STA	ICBAH,X
	LDA	#<DIRNAM
	STA	ICBAL,X
	LDA	#6
	STA	AUX1,X
	LDA	#0
	STA	AUX2,X
	JSR	CIOV
	RTS
;
CLOSE6	LDX	#$60
	LDA	#$0C
	STA	ICCOM,X
	JSR	CIOV
	RTS
;
;read ina map from disk
;
GETFIL	LDA	#5
	LDX	#$60
	STA	ICCOM,X
	LDA	#>DBUF
	STA	ICBAH,X
	LDA	#<DBUF
	STA	ICBAL,X
	LDA	#20
	STA	ICBLL,X
	LDA	#0
	STA	ICBLH,X
	JSR	CIOV
	BMI	DOV
	LDA	DBUF+4
	CMP	#'F
	BNE	FLP
DOV	JSR	GETDIR
	LDA	#0
	STA	MAPFLG
	PLA
	PLA
	JMP	MAP2
;
FLP	LDX	#10
DLP	LDA	DBUF,X
	STA	MAPNAM-2,X
	CMP	#$20
	BEQ	DRET
	INX
	BNE	DLP
DRET	LDA	#EOL
	STA	MAPNAM-2,X
	RTS
;
DIRNAM	.BYTE	"D1:SMAP.*",EOL
;
;try jumping to edge
;once per level only
;to road
;
JMPEDG	LDA	EDGFLG
	BNE	JEA
	RTS
JEA	LDA	DIRECT
	CMP	#7
	BNE	JLF
	LDA	SMX
	STA	EHOLD
	LDA	#$C8
	SEC
	SBC	PXP
	LSR	A
	LSR	A
	STA	EADD
	CLC
	ADC	SMX
	STA	SMX
	DEC	SMX
	DEC	SMX
	JSR	LOOKR
	BCC	JYES
	LDA	EHOLD
	STA	SMX
	RTS
JYES	LDX	#$C8
	STX	HPOSP0
	STX	PXP
	INX
	STX	HPOSP0+1
	STX	PXP+1
	INC	SMX
	INC	SMX
	DEC	EDGFLG
	RTS
;
JLF	CMP	#11
	BNE	JUP
	LDA	SMX
	STA	EHOLD
	LDA	PXP
	SEC
	SBC	#$30
	LSR	A
	LSR	A
	STA	EADD
	LDA	SMX
	SEC
	SBC	EADD
	STA	SMX
	INC	SMX
	INC	SMX
	JSR	LOOKL
	BCC	JEB
	LDA	EHOLD
	STA	SMX
	RTS
JEB	LDX	#$30
	STX	HPOSP0
	STX	PXP
	DEX
	STX	HPOSP0+1
	STX	PXP+1
	DEC	SMX
	DEC	SMX
	DEC	EDGFLG
	RTS
;
JUP	CMP	#14
	BNE	JDN
	LDA	SMY
	STA	EHOLD
	LDA	PYP
	SEC
	SBC	#$30
	LSR	A
	LSR	A
	LSR	A
	LSR	A	;/16
	STA	EADD
	LDA	SMY
	SEC
	SBC	EADD
	STA	SMY
	INC	SMY
	JSR	LOOKU
	BCC	JEC
	LDA	EHOLD
	STA	SMY
	RTS
JEC	DEC	SMY
	JSR	ERS01
	LDA	#$30
	STA	PYP
	JSR	DEFPLR
	DEC	EDGFLG
	RTS
;
;erase players 0 and 1
;
ERS01	LDY	#$FF
	LDA	#0
ERSA	STA	P0MEM,Y
	STA	P1MEM,Y
	DEY
	BNE	ERSA
	RTS
;
JDN	CMP	#13
	BNE	JRET
	LDA	SMY
	STA	EHOLD
	LDA	#$C0
	SEC
	SBC	PYP
	LSR	A
	LSR	A
	LSR	A
	LSR	A
	CLC
	ADC	SMY
	STA	SMY
	DEC	SMY
	JSR	LOOKD
	BCC	JED
	LDA	EHOLD
	STA	SMY
JRET	RTS
JED	JSR	ERS01
	LDA	#$C0
	STA	PYP
	JSR	DEFPLR
	INC	SMY
	DEC	EDGFLG
	RTS
;
;bonus car bell sound
;
BELL	JSR	OFF2
	LDA	#12
	STA	$D202
BL3	LDA	#$A9
	STA	SHD
BL1	DEC	SHD
	LDA	SHD
	CMP	#$A0
	BCC	BL2
	STA	$D203
	JSR	DELAY
	JMP	BL1
BL2	JSR	OFF2
	RTS
;
;storm sound
;
ICESND	LDA	ICEON
	BEQ	ICOFF
	LDA	#$86
	STA	$D201
	LDA	#11
	STA	$D200
	RTS
ICOFF	JSR	OFF1
	RTS
;
;check if START was pressed
;
STKEY	LDA	CONSOL
	CMP	#6
	BEQ	STKEY
	JMP	GAMOVR
;
;setup game board and colors
;
SETSCN	LDA	#>DL1
	STA	SDLSTL+1
	LDA	#<DL1
	STA	SDLSTL
	LDA	#$C0
	STA	$D40E
	LDA	#>DLI
	STA	513
	LDA	#<DLI
	STA	512
	LDX	#4
KLR	LDA	CLRTAB,X
	STA	COLOR0,X
	DEX
	BPL	KLR
	RTS
Listing 4: Assembly
;SAVE#D:SNOW.PT3
;
;-----------------
; screen data file
; & uncompacter
; for snowplow
;
; by: Barry Kolbe
;
;-----------------
;
;uncompact screen data
;
;set up pointers &
;end of memory
;
UNCOM	LDA	#$90
	STA	BFL+1
	LDA	#0
	STA	BFL
	LDA	#<MAPDATA
	STA	TL
	LDA	#>MAPDATA
	STA	TL+1
	LDA	#1
	STA	EDM
	LDA	#$9A
	STA	EDM+1
;
;test for unique or
;repeated data
;
	LDY	#0
UC1	STY	UNIQUE
	STY	COUNT+1
	JSR	GETAB	;in A
	CLC
	ROL	A
	ROL	UNIQUE	;bit 7 test
	LSR	A
	STA	COUNT	;lsb
	BNE	CKU	;if 0 long count
	JSR	GETAB	;msb
	STA	COUNT+1
	JSR	GETAB
	STA	COUNT	;lsb of long cnt
CKU	LDA	UNIQUE
	BEQ	UC2
UC3	JSR	GETAB	;unique data
	STA	(BFL),Y
	JSR	NXBFL
	DEC	COUNT
	BNE	UC3
	LDA	COUNT+1
	BEQ	UC1
	DEC	COUNT+1
	JMP	UC3
;
;repeated data
;
UC2	JSR	GETAB
	STA	DATA
UC4	LDA	DATA
	STA	(BFL),Y
	JSR	NXBFL
	DEC	COUNT
	BNE	UC4
	LDA	COUNT+1
	BEQ	UC1	;next
	DEC	COUNT+1
	JMP	UC4
;
;increment dest. ptr &
;check for end of screen
;memory
;
NXBFL	INC	BFL
	BNE	NIN
	INC	BFL+1
NIN	LDA	BFL+1
	CMP	EDM+1
	BNE	NRT
	LDA	BFL
	CMP	EDM
	BNE	NRT
	PLA		;done so get out
	PLA
NRT	RTS
;
GETAB	LDA	(TL),Y	;get 1 byte
	INC	TL	;&inc. ptr of
	BNE	GTZ	;source
	INC	TL+1
GTZ	RTS
;
;the actual screen compacted
;
MAPDATA	.BYTE	4,0,30,96,130,108
	.BYTE	110,14,96,130,108,116
	.BYTE	6,7,130,114,110,28
	.BYTE	96,130,27,28,12,96
	.BYTE	130,108,110,22,96,130
	.BYTE	108,116,4,0,130,14
	.BYTE	15,3,7,135,1,2
	.BYTE	3,4,7,5,6,2
	.BYTE	7,130,5,6,3,7
	.BYTE	130,5,6,9,7,130
	.BYTE	98,100,2,7,130,5
	.BYTE	6,2,7,130,5,6
	.BYTE	6,7,130,98,100,6
	.BYTE	7,130,98,100,2,7
	.BYTE	137,13,7,1,2,3
	.BYTE	4,7,5,6,27,7
	.BYTE	130,5,6,2,7,130
	.BYTE	98,100,5,7,130,14
	.BYTE	15,15,7,130,98,100
	.BYTE	4,0,2,7,130,114
	.BYTE	110,12,96,130,108,116
	.BYTE	6,7,130,5,6,4
	.BYTE	7,130,98,100,4,7
	.BYTE	130,5,6,2,7,130
	.BYTE	5,6,4,7,132,98
	.BYTE	100,5,6,2,7,132
	.BYTE	5,6,98,104,10,96
	.BYTE	130,108,116,6,7,135
	.BYTE	1,2,3,4,7,5
	.BYTE	6,5,7,130,5,6
	.BYTE	8,7,132,5,6,98
	.BYTE	100,2,7,130,114,110
	.BYTE	14,96,130,108,116,2
	.BYTE	7,130,98,100,4,0
	.BYTE	135,5,6,98,100,7
	.BYTE	5,6,9,7,133,98
	.BYTE	100,7,5,6,5,7
	.BYTE	130,5,6,2,7,130
	.BYTE	98,100,14,7,130,98
	.BYTE	100,2,7,130,5,6
	.BYTE	2,7,130,98,100,10
	.BYTE	7,133,98,100,7,5
	.BYTE	6,5,7,4,96,130
	.BYTE	108,116,2,7,130,14
	.BYTE	15,11,7,131,13,98
	.BYTE	100,2,7,130,98,100
	.BYTE	14,7,130,98,100,2
	.BYTE	7,130,98,100,4,0
	.BYTE	2,7,130,98,100,7
	.BYTE	7,135,1,2,3,4
	.BYTE	7,120,112,12,96,130
	.BYTE	106,118,14,7,130,98
	.BYTE	104,6,96,130,102,100
	.BYTE	8,7,135,1,2,3
	.BYTE	4,7,5,6,4,7
	.BYTE	130,5,6,3,7,130
	.BYTE	120,112,12,96,130,108
	.BYTE	110,2,96,130,106,118
	.BYTE	2,7,130,98,100,2
	.BYTE	7,130,114,110,6,96
	.BYTE	130,108,116,2,7,130
	.BYTE	98,100,2,7,130,98
	.BYTE	100,4,0,2,7,130
	.BYTE	98,100,4,7,130,5
	.BYTE	6,3,7,130,5,6
	.BYTE	5,7,130,5,6,2
	.BYTE	7,130,5,6,6,7
	.BYTE	130,5,6,2,7,130
	.BYTE	5,6,8,7,130,98
	.BYTE	100,6,7,130,98,100
	.BYTE	2,7,130,5,6,3
	.BYTE	7,130,5,6,4,7
	.BYTE	133,5,6,7,5,6
	.BYTE	16,7,130,8,10,2
	.BYTE	7,130,98,100,2,7
	.BYTE	130,5,6,2,7,130
	.BYTE	98,100,2,7,138,98
	.BYTE	100,13,7,1,2,3
	.BYTE	4,98,100,2,7,130
	.BYTE	98,100,2,7,130,98
	.BYTE	100,4,0,2,7,130
	.BYTE	120,112,30,96,130,27
	.BYTE	28,4,96,130,108,116
	.BYTE	4,7,130,98,100,6
	.BYTE	7,130,98,100,4,7
	.BYTE	130,114,110,2,96,130
	.BYTE	108,116,4,7,130,114
	.BYTE	110,2,96,130,108,116
	.BYTE	4,7,130,114,110,4
	.BYTE	96,130,108,116,6,7
	.BYTE	130,98,100,4,7,132
	.BYTE	5,6,98,100,2,7
	.BYTE	130,120,112,4,96,2
	.BYTE	7,130,98,100,2,7
	.BYTE	130,98,100,2,7,130
	.BYTE	98,100,4,0,13,7
	.BYTE	130,5,6,21,7,130
	.BYTE	5,6,2,7,130,98
	.BYTE	100,4,7,132,98,100
	.BYTE	8,10,4,7,130,98
	.BYTE	100,4,7,134,98,100
	.BYTE	5,6,98,100,4,7
	.BYTE	134,98,100,5,6,98
	.BYTE	100,4,7,130,98,100
	.BYTE	2,7,132,14,15,98
	.BYTE	100,6,7,130,98,100
	.BYTE	6,7,130,98,100,10
	.BYTE	7,130,98,100,2,7
	.BYTE	130,98,100,2,7,130
	.BYTE	98,100,4,0,130,114
	.BYTE	110,28,96,130,108,116
	.BYTE	6,7,134,14,15,98
	.BYTE	100,5,6,2,7,130
	.BYTE	98,100,6,7,130,120
	.BYTE	112,4,96,130,106,118
	.BYTE	2,7,130,120,112,4
	.BYTE	96,130,106,118,2,7
	.BYTE	130,120,112,4,96,130
	.BYTE	106,118,4,7,130,120
	.BYTE	112,2,96,130,108,110
	.BYTE	2,96,130,106,118,6
	.BYTE	7,130,120,112,10,96
	.BYTE	130,106,118,2,7,130
	.BYTE	98,100,2,7,130,98
	.BYTE	100,4,0,139,98,100
	.BYTE	7,5,6,5,6,5
	.BYTE	6,5,6,7,7,130
	.BYTE	5,6,3,7,130,5
	.BYTE	6,5,7,130,98,100
	.BYTE	4,7,130,114,110,2
	.BYTE	96,130,106,118,4,7
	.BYTE	130,98,100,6,7,137
	.BYTE	13,7,1,2,3,4
	.BYTE	7,5,6,27,7,131
	.BYTE	98,100,13,25,7,130
	.BYTE	98,100,2,7,130,98
	.BYTE	100,4,0,130,120,112
	.BYTE	10,96,130,8,10,6
	.BYTE	7,130,5,6,8,7
	.BYTE	130,98,100,4,7,130
	.BYTE	98,100,8,7,130,98
	.BYTE	100,8,7,130,114,110
	.BYTE	18,96,130,108,116,4
	.BYTE	7,130,114,110,6,96
	.BYTE	130,106,112,4,96,130
	.BYTE	27,28,20,96,130,102
	.BYTE	100,2,7,130,98,100
	.BYTE	4,0,5,7,130,5
	.BYTE	6,16,7,130,5,6
	.BYTE	5,7,130,98,100,4
	.BYTE	7,130,98,100,8,7
	.BYTE	132,98,100,5,6,2
	.BYTE	7,130,5,6,2,7
	.BYTE	130,98,100,6,7,138
	.BYTE	5,6,7,1,2,3
	.BYTE	4,7,5,6,2,7
	.BYTE	130,98,100,4,7,130
	.BYTE	98,100,24,7,130,5
	.BYTE	6,8,7,130,98,100
	.BYTE	2,7,130,98,100,4
	.BYTE	0,130,114,110,6,96
	.BYTE	130,108,116,4,7,130
	.BYTE	114,110,6,96,130,108
	.BYTE	116,6,7,130,98,100
	.BYTE	4,7,130,120,112,2
	.BYTE	96,130,108,116,4,7
	.BYTE	130,98,100,2,7,130
	.BYTE	5,6,2,7,132,5
	.BYTE	6,98,100,2,7,130
	.BYTE	5,6,4,7,130,5
	.BYTE	6,8,7,132,98,100
	.BYTE	8,10,2,7,130,98
	.BYTE	104,10,96,130,108,116
	.BYTE	2,7,136,13,7,1
	.BYTE	2,3,4,1,2,3
	.BYTE	7,132,5,6,5,6
	.BYTE	5,7,130,98,100,2
	.BYTE	7,130,98,100,4,0
	.BYTE	130,98,100,6,7,130
	.BYTE	98,100,2,7,132,5
	.BYTE	6,98,100,6,7,130
	.BYTE	98,100,6,7,130,98
	.BYTE	100,8,7,130,98,100
	.BYTE	4,7,130,98,100,8
	.BYTE	7,130,98,100,4,7
	.BYTE	130,5,6,12,7,130
	.BYTE	98,100,4,7,130,98
	.BYTE	100,2,7,130,5,6
	.BYTE	6,7,130,98,100,6
	.BYTE	7,130,98,100,2,7
	.BYTE	130,5,6,10,7,130
	.BYTE	98,100,2,7,130,98
	.BYTE	100,4,0,130,98,100
	.BYTE	2,7,130,5,6,2
	.BYTE	7,130,120,112,4,96
	.BYTE	132,106,118,5,6,2
	.BYTE	7,134,5,6,98,100
	.BYTE	5,6,2,7,135,5
	.BYTE	6,98,100,7,5,6
	.BYTE	5,7,130,98,100,4
	.BYTE	7,130,98,100,8,7
	.BYTE	130,120,112,8,96,130
	.BYTE	108,110,8,96,130,106
	.BYTE	118,4,7,130,98,100
	.BYTE	5,7,130,5,6,3
	.BYTE	7,130,120,112,6,96
	.BYTE	130,106,118,5,7,130
	.BYTE	5,6,7,7,134,98
	.BYTE	100,14,15,98,100,4
	.BYTE	0,130,98,100,4,7
	.BYTE	130,5,6,10,7,130
	.BYTE	5,6,2,7,130,98
	.BYTE	100,2,7,130,5,6
	.BYTE	2,7,130,120,112,8
	.BYTE	96,130,106,112,4,96
	.BYTE	130,102,100,4,7,130
	.BYTE	5,6,3,7,130,5
	.BYTE	6,2,7,130,5,6
	.BYTE	3,7,130,98,100,2
	.BYTE	7,130,5,6,3,7
	.BYTE	130,5,6,5,7,130
	.BYTE	98,104,4,96,130,108
	.BYTE	116,11,7,130,5,6
	.BYTE	14,7,131,13,98,100
	.BYTE	2,7,130,98,100,4
	.BYTE	0,130,98,100,6,7
	.BYTE	130,114,110,6,96,132
	.BYTE	1,2,3,4,2,7
	.BYTE	130,98,100,9,7,130
	.BYTE	5,6,11,7,130,98
	.BYTE	100,6,7,130,5,6
	.BYTE	10,7,130,98,100,4
	.BYTE	7,130,5,6,8,7
	.BYTE	130,98,100,2,7,132
	.BYTE	3,4,98,100,2,7
	.BYTE	130,8,10,24,96,130
	.BYTE	106,118,2,7,130,98
	.BYTE	100,4,0,130,98,100
	.BYTE	3,7,133,5,6,7
	.BYTE	98,100,12,7,130,98
	.BYTE	100,13,7,130,14,15
	.BYTE	7,7,130,98,100,9
	.BYTE	7,130,5,6,2,7
	.BYTE	130,5,6,3,7,130
	.BYTE	98,100,7,7,130,5
	.BYTE	6,5,7,130,98,100
	.BYTE	5,7,130,14,15,23
	.BYTE	7,132,1,2,3,4
	.BYTE	4,7,130,98,100,4
	.BYTE	0,132,1,2,3,4
	.BYTE	4,7,130,120,112,12
	.BYTE	96,130,106,112,12,96
	.BYTE	130,27,28,8,96,130
	.BYTE	106,112,18,96,132,106
	.BYTE	118,14,15,2,7,134
	.BYTE	1,2,3,4,3,4
	.BYTE	4,96,130,106,112,38
	.BYTE	96,130,106,118
Listing 5: Assembly
; SAVE#D:SNOW.PT4
;
;-------------------------
;Intro Screen for SNOWPLOW
;
;by: Bryan Schappel
;
;-------------------------
;
CLS	.BYTE	$92,$0A,$00,$42,$00
WEATHER	.SBYTE	"national weat"
	.SBYTE	"her service bulle"
	.SBYTE	"tin        snow w"
	.SBYTE	"arning"
;
STARTI	LDY	#0	;turn off vbi
	STY	VFLG
	STY	ICEON	;storm off
	JSR	SNDOFF
	LDX	IFLAG	;falling
	BNE	INTRO	;letters?
	LDA	#8
	STA	CONSOL
	LDA	#90	;scroll len
	STA	SLENGTH
CP1	LDA	SET+$0200,Y	;copy chrset
	STA	SET2,Y	;out
	LDA	#0
	STA	SET+$0200,Y
	STA	SCRLMEM,Y
	INY
	BNE	CP1
;
INTRO	LDX	#5	;copy high score
TSLP	LDA	SCRS,X	;to intro
	STA	TOPSCORE+12,X	;screen
	DEX
	BPL	TSLP
	LDX	#7
	LDA	#0	;players off
WWLP	STA	HPOSP0,X
	DEX
	BPL	WWLP
;
	TAY		;set up scroll
CWLP	STA	SCRLMEM,Y	;message
	DEY
	BNE	CWLP
	LDY	#53
WCP	LDA	WEATHER,Y
	STA	SCRLMEM+22,Y
	DEY
	BPL	WCP
;
	LDY	#4	;put in colors
GCL	LDA	CLS,Y
	STA	COLOR0,Y
	DEY
	BPL	GCL
;
	LDA	#0	;ptrs for chset
	STA	IND2	;move
	STA	INDR
	STA	COLOR2
	LDA	#>SET2
	STA	INDR+1
	LDA	#>[SET+$0200]
	STA	IND2+1
	LDA	#<IDLST	;intro dlist
	STA	SDLSTL
	LDA	#>IDLST
	STA	SDLSTL+1
;
	LDA	IFLAG	;first time?
	BNE	SKIPSNOW	;for snow
	INC	IFLAG	;letters?
	JSR	GETRAND
	LDA	#15
	STA	IIY3
LP1	LDA	#15
	STA	ICNT
LOOP	LDY	ICNT
	LDA	RANDS,Y
	TAY
	LDA	TAB16,Y
	STA	INDR
	STA	IND2
	LDY	IIY3
	LDA	(INDR),Y
	JSR	MOVEDN
	BCS	SKIPSNOW
	DEC	ICNT
	BPL	LOOP
	DEC	IIY3
	BPL	LP1
;
SKIPSNOW	LDY	#0
	STY	LMS
SK1	LDA	SET2,Y
	STA	SET+$0200,Y
	INY
	BNE	SK1
;
;Scroll Weather Message
;
ISCRL	LDX	#7
ISC	STX	HSCROL
	LDA	#0
	STA	RTCLOK
WT1	LDA	CONSOL
	BEQ	SKPPER
	CMP	#6
	BEQ	GSTART
	LDA	RTCLOK
	BEQ	WT1
	DEX
	BPL	ISC
	LDY	LMS
	INY
	CPY	SLENGTH
	BNE	ISK
	LDY	#0
ISK	STY	LMS
	JMP	ISCRL
;
GSTART	LDA	#0
	STA	DIRF
GST	STA	LMS
	STA	HSCROL
	RTS
;
SKPPER	LDA	#1
	STA	DIRF
	LDA	#0
	BEQ	GST
;
;Move byte down
;
MOVEDN	STY	IISY
	CMP	#0
	BEQ	MRTS
	LDY	#0
MLP	STA	(IND2),Y
	CPY	IISY
	BEQ	MRTS
	LDX	#0
	STX	RTCLOK
WL	LDX	CH
	CPX	#$FF
	BNE	BRTS
	LDX	RTCLOK
	BEQ	WL
	PHA
	LDA	#0
	STA	(IND2),Y
	PLA
	INY
	BNE	MLP
MRTS	LDY	IISY
	CLC
	RTS
BRTS	LDX	#$FF
	STX	CH
	SEC
	RTS
;
;Get 16 Random Numbers
;
GETRAND	LDA	#1
	STA	RAND
	LDA	RANDOM
	AND	#$0F
	STA	RANDS
RLOOP	LDA	RANDOM
	AND	#$0F
	LDY	#0
RSRCH	CMP	RANDS,Y
	BEQ	RLOOP
	INY
	CPY	RAND
	BNE	RSRCH
	STA	RANDS,Y
	INY
	STY	RAND
	CPY	#16
	BNE	RLOOP
	RTS
;
TAB16	.BYTE	0,16,32,48
	.BYTE	64,80,96,112
	.BYTE	128,144,160,176
	.BYTE	192,208,224,240
;
STAR	=	*
	*=	$7B00
;
SNOWMEM	.SBYTE	"            "
	.BYTE	"@BDFHJLNPRTVXZ\^"
	.SBYTE	"            "
	.SBYTE	"            "
	.BYTE	"ACEGIKMOQSUWY[]_"
	.SBYTE	"            "
	.SBYTE	"   BY: BARRY KOL"
	.SBYTE	"BE AND BRYAN SCH"
	.SBYTE	"APPEL   "
	.SBYTE	"     COPYRIGHT 1"
	.SBYTE	"988 BBK ENTERPRI"
	.SBYTE	"SES     "
;
TOPSCORE	.SBYTE	"  top score "
	.SBYTE	"000000  "
	*=	STAR
Listing 6: Assembly
;--------------------------
;
;SNOWPLOW Character Set
;
;by: Barry Kolbe (graphics)
;and Bryan Schappel (text)
;
;--------------------------
;
	.BYTE	$00,$00,$00,$00
	.BYTE	$00,$00,$00,$00
	.BYTE	$EC,$E2,$CA,$2A
	.BYTE	$A2,$A2,$AA,$AA
	.BYTE	$3F,$8F,$A3,$A8
	.BYTE	$0A,$0A,$0A,$0A
	.BYTE	$FF,$FF,$00,$AA
	.BYTE	$80,$80,$80,$80
	.BYTE	$FF,$FF,$00,$AA
	.BYTE	$0A,$0A,$0A,$0A
	.BYTE	$FD,$F5,$D5,$D5
	.BYTE	$D5,$F5,$FE,$FE
	.BYTE	$7F,$5F,$57,$57
	.BYTE	$57,$5F,$BF,$BF
	.BYTE	$FF,$FF,$FF,$FF
	.BYTE	$FF,$FF,$FF,$FF
	.BYTE	$FA,$EA,$A0,$A2
	.BYTE	$A0,$A2,$E2,$FA
	.BYTE	$FA,$EA,$AA,$AA
	.BYTE	$AA,$AA,$EA,$FA
	.BYTE	$BF,$AF,$0B,$AB
	.BYTE	$0B,$AB,$AF,$BF
	.BYTE	$BF,$AF,$AB,$AB
	.BYTE	$AB,$AB,$AF,$BF
	.BYTE	$00,$00,$00,$00
	.BYTE	$00,$18,$18,$30
	.BYTE	$FF,$FF,$FF,$FB
	.BYTE	$EA,$FB,$EA,$FF
	.BYTE	$FE,$EA,$EF,$EA
	.BYTE	$FE,$FE,$FE,$FE
	.BYTE	$BF,$AB,$FB,$AB
	.BYTE	$BF,$BF,$BF,$BF
	.BYTE	$7F,$63,$63,$63
	.BYTE	$63,$63,$7F,$00
	.BYTE	$38,$18,$18,$18
	.BYTE	$3C,$3C,$3C,$00
	.BYTE	$7F,$63,$03,$7F
	.BYTE	$60,$60,$7F,$00
	.BYTE	$7E,$06,$06,$7F
	.BYTE	$07,$07,$7F,$00
	.BYTE	$70,$70,$70,$77
	.BYTE	$77,$7F,$07,$00
	.BYTE	$7F,$60,$60,$7F
	.BYTE	$07,$07,$7F,$00
	.BYTE	$7C,$6C,$60,$7F
	.BYTE	$63,$63,$7F,$00
	.BYTE	$7F,$03,$03,$1F
	.BYTE	$18,$18,$18,$00
	.BYTE	$3E,$36,$36,$7F
	.BYTE	$77,$77,$7F,$00
	.BYTE	$7F,$63,$63,$7F
	.BYTE	$07,$07,$07,$00
	.BYTE	$00,$00,$18,$18
	.BYTE	$00,$18,$18,$00
	.BYTE	$FF,$FF,$FE,$F8
	.BYTE	$AA,$AA,$CF,$FF
	.BYTE	$FF,$FF,$AF,$AB
	.BYTE	$AA,$AA,$F3,$FF
	.BYTE	$00,$00,$01,$04
	.BYTE	$55,$55,$30,$00
	.BYTE	$00,$00,$50,$54
	.BYTE	$55,$55,$0C,$00
	.BYTE	$00,$3C,$66,$0C
	.BYTE	$18,$00,$18,$00
	.BYTE	$00,$3C,$66,$6E
	.BYTE	$6E,$60,$3E,$00
	.BYTE	$00,$00,$3F,$03
	.BYTE	$7F,$67,$7F,$00
	.BYTE	$00,$60,$60,$7F
	.BYTE	$73,$73,$7F,$00
	.BYTE	$00,$00,$7F,$60
	.BYTE	$60,$60,$7F,$00
	.BYTE	$00,$03,$03,$7F
	.BYTE	$63,$63,$7F,$00
	.BYTE	$00,$00,$7F,$63
	.BYTE	$7F,$70,$7F,$00
	.BYTE	$00,$1E,$18,$7E
	.BYTE	$18,$38,$38,$00
	.BYTE	$00,$00,$7F,$63
	.BYTE	$63,$7F,$07,$7F
	.BYTE	$00,$60,$60,$7F
	.BYTE	$73,$73,$73,$00
	.BYTE	$00,$0C,$00,$0C
	.BYTE	$0C,$1C,$1C,$00
	.BYTE	$00,$0C,$00,$0C
	.BYTE	$0C,$0E,$0E,$7E
	.BYTE	$00,$30,$30,$76
	.BYTE	$7C,$76,$73,$00
	.BYTE	$00,$18,$18,$18
	.BYTE	$38,$38,$38,$00
	.BYTE	$00,$00,$66,$7F
	.BYTE	$7F,$6B,$63,$00
	.BYTE	$00,$00,$3F,$33
	.BYTE	$73,$73,$73,$00
	.BYTE	$00,$00,$3F,$33
	.BYTE	$73,$73,$7F,$00
	.BYTE	$00,$00,$3F,$33
	.BYTE	$73,$7F,$70,$70
	.BYTE	$00,$00,$7F,$63
	.BYTE	$63,$7F,$07,$07
	.BYTE	$00,$00,$3F,$33
	.BYTE	$70,$70,$70,$00
	.BYTE	$00,$00,$7F,$60
	.BYTE	$7F,$07,$7F,$00
	.BYTE	$00,$0C,$7F,$0C
	.BYTE	$1C,$1C,$1C,$00
	.BYTE	$00,$00,$33,$33
	.BYTE	$73,$73,$7F,$00
	.BYTE	$00,$00,$63,$63
	.BYTE	$63,$36,$1C,$00
	.BYTE	$00,$00,$63,$6B
	.BYTE	$7F,$3E,$36,$00
	.BYTE	$00,$00,$66,$3C
	.BYTE	$18,$3C,$66,$00
	.BYTE	$00,$00,$33,$33
	.BYTE	$73,$7F,$03,$0F
	.BYTE	$00,$00,$7E,$0C
	.BYTE	$18,$30,$7E,$00
	.BYTE	$00,$1E,$18,$18
	.BYTE	$18,$18,$1E,$00
	.BYTE	$00,$40,$60,$30
	.BYTE	$18,$0C,$06,$00
	.BYTE	$00,$78,$18,$18
	.BYTE	$18,$18,$78,$00
	.BYTE	$00,$08,$1C,$36
	.BYTE	$63,$00,$00,$00
	.BYTE	$00,$00,$00,$00
	.BYTE	$00,$00,$FF,$00
	.BYTE	$00,$00,$07,$0F
	.BYTE	$1C,$1C,$1C,$1F
	.BYTE	$0F,$00,$00,$00
	.BYTE	$18,$1F,$1F,$00
	.BYTE	$00,$00,$FC,$FC
	.BYTE	$0C,$00,$00,$FC
	.BYTE	$FE,$0E,$0E,$0E
	.BYTE	$1E,$FC,$F8,$00
	.BYTE	$00,$00,$7C,$7C
	.BYTE	$1E,$1E,$1F,$1F
	.BYTE	$1F,$1D,$1C,$1C
	.BYTE	$1C,$7C,$7C,$00
	.BYTE	$00,$00,$3E,$3E
	.BYTE	$38,$38,$38,$38
	.BYTE	$B8,$F8,$F8,$78
	.BYTE	$78,$3E,$3E,$00
	.BYTE	$00,$00,$3F,$7F
	.BYTE	$70,$70,$70,$70
	.BYTE	$70,$70,$70,$70
	.BYTE	$70,$7F,$3F,$00
	.BYTE	$00,$00,$F8,$FC
	.BYTE	$1C,$1C,$1C,$1C
	.BYTE	$1C,$1C,$1C,$1C
	.BYTE	$1C,$FC,$F8,$00
	.BYTE	$00,$00,$7C,$7C
	.BYTE	$1C,$1C,$1C,$1D
	.BYTE	$1D,$1D,$1D,$1F
	.BYTE	$1F,$7E,$7C,$00
	.BYTE	$00,$00,$3E,$3E
	.BYTE	$38,$38,$38,$B8
	.BYTE	$B8,$B8,$B8,$F8
	.BYTE	$F8,$7E,$3E,$00
	.BYTE	$00,$00,$7F,$7F
	.BYTE	$1C,$1C,$1C,$1C
	.BYTE	$1F,$1F,$1C,$1C
	.BYTE	$1C,$7F,$7F,$00
	.BYTE	$00,$00,$F0,$F8
	.BYTE	$1C,$1C,$1C,$1C
	.BYTE	$F8,$F0,$00,$00
	.BYTE	$00,$00,$00,$00
	.BYTE	$00,$00,$7F,$7F
	.BYTE	$1C,$1C,$1C,$1C
	.BYTE	$1C,$1C,$1C,$1C
	.BYTE	$1C,$7F,$7F,$00
	.BYTE	$00,$00,$00,$00
	.BYTE	$00,$00,$00,$00
	.BYTE	$00,$00,$00,$1C
	.BYTE	$1C,$FC,$FC,$00
	.BYTE	$00,$00,$3F,$7F
	.BYTE	$70,$70,$70,$70
	.BYTE	$70,$70,$70,$70
	.BYTE	$70,$7F,$3F,$00
	.BYTE	$00,$00,$F8,$FC
	.BYTE	$1C,$1C,$1C,$1C
	.BYTE	$1C,$1C,$1C,$1C
	.BYTE	$1C,$FC,$F8,$00
	.BYTE	$00,$00,$7C,$7C
	.BYTE	$1C,$1C,$1C,$1D
	.BYTE	$1D,$1D,$1D,$1F
	.BYTE	$1F,$7E,$7C,$00
	.BYTE	$00,$00,$3E,$3E
	.BYTE	$38,$38,$38,$B8
	.BYTE	$B8,$B8,$B8,$F8
	.BYTE	$F8,$7E,$3E,$00
	.BYTE	$FF,$FF,$FF,$D7
	.BYTE	$FF,$FF,$FF,$FF
	.BYTE	$00,$00,$00,$14
	.BYTE	$00,$00,$00,$00
	.BYTE	$FF,$FD,$FF,$FD
	.BYTE	$FF,$FD,$FF,$FD
	.BYTE	$00,$01,$00,$01
	.BYTE	$00,$01,$00,$01
	.BYTE	$FF,$7F,$FF,$7F
	.BYTE	$FF,$7F,$FF,$7F
	.BYTE	$00,$40,$00,$40
	.BYTE	$00,$40,$00,$40
	.BYTE	$FF,$FD,$FF,$5D
	.BYTE	$FF,$FD,$FF,$FD
	.BYTE	$00,$01,$00,$51
	.BYTE	$00,$01,$00,$01
	.BYTE	$FF,$7F,$FF,$75
	.BYTE	$FF,$7F,$FF,$7F
	.BYTE	$00,$40,$00,$45
	.BYTE	$00,$40,$00,$40
	.BYTE	$FF,$FD,$FF,$5D
	.BYTE	$FF,$FF,$FF,$FF
	.BYTE	$00,$01,$00,$51
	.BYTE	$00,$00,$00,$00
	.BYTE	$FF,$FF,$FF,$5D
	.BYTE	$FF,$FD,$FF,$FD
	.BYTE	$00,$00,$00,$51
	.BYTE	$00,$01,$00,$01
	.BYTE	$FF,$FF,$FF,$75
	.BYTE	$FF,$7F,$FF,$7F
	.BYTE	$00,$00,$00,$45
	.BYTE	$00,$40,$00,$40
	.BYTE	$FF,$7F,$FF,$75
	.BYTE	$FF,$FF,$FF,$FF
	.BYTE	$00,$40,$00,$45
	.BYTE	$00,$00,$00,$00
	.BYTE	$FF,$FF,$FF,$FD
	.BYTE	$FF,$FD,$FF,$FD
	.BYTE	$00,$00,$00,$01
	.BYTE	$00,$01,$00,$01
	.BYTE	$FF,$FF,$FF,$7F
	.BYTE	$FF,$7F,$FF,$7F
	.BYTE	$00,$00,$00,$40
	.BYTE	$00,$40,$00,$40
	.BYTE	$FF,$7F,$FF,$7F
	.BYTE	$FF,$FF,$FF,$FF
	.BYTE	$00,$40,$00,$40
	.BYTE	$00,$00,$00,$00
	.BYTE	$FF,$FD,$FF,$FD
	.BYTE	$FF,$FF,$FF,$FF
	.BYTE	$00,$01,$00,$01
	.BYTE	$00,$00,$00,$00
	.BYTE	$FF,$EF,$FF,$55
	.BYTE	$FF,$FF,$FF,$FF
	.BYTE	$00,$08,$00,$55
	.BYTE	$00,$00,$00,$00
	.BYTE	$18,$18,$18,$18
	.BYTE	$18,$18,$18,$18
	.BYTE	$00,$7E,$78,$7C
	.BYTE	$6E,$66,$06,$00
	.BYTE	$08,$18,$38,$78
	.BYTE	$38,$18,$08,$00
	.BYTE	$10,$18,$1C,$1E
	.BYTE	$1C,$18,$10,$00
